{"version":3,"sources":["components/Chart/Chart.module.css","images/covid19.png","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","select","i","key","App","state","fetchedData","setState","fetchdata","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60d0b5cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3Amva\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.3d7ddb3f.png\";","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate }}) => {\r\nif(!confirmed)\r\n{\r\n    return 'Loading...';\r\n}\r\n    return(\r\n        <div className={styles.container}>\r\n<Grid container spacing={3} justify=\"center\">\r\n\r\n    <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)} >\r\n    <CardContent>\r\n        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n    <Typography variant=\"h5\"> <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" /> </Typography>\r\n    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">Number of Active Cases of Covid-19</Typography>\r\n    </CardContent>\r\n    </Grid>\r\n\r\n    <Grid item component={Card}  xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n    <CardContent>\r\n        <Typography color='textSecondary' gutterBottom>Recoverd</Typography>\r\n        <Typography variant=\"h5\"> <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" /></Typography>\r\n        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">Number of Recoverd Cases of Covid-19</Typography>\r\n    </CardContent>\r\n    </Grid>\r\n\r\n    <Grid item component={Card}  xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n    <CardContent>\r\n        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n        <Typography variant=\"h5\"> <CountUp start={0}  end={deaths.value} duration={2.5} separator=\",\" /></Typography>\r\n        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">Number of Deaths Cases of Covid-19</Typography>\r\n    </CardContent>\r\n    </Grid>\r\n\r\n</Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url;\r\n\r\nif(country) {\r\n    changeableUrl =`${url}/countries/${country}`\r\n}\r\n\r\n    try {\r\n const { data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n \r\nreturn { confirmed, recovered, deaths, lastUpdate};\r\n\r\n    }catch(error) {\r\nconsole.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData= async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\nreturn modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n\r\n        //console.log(response);\r\n    }catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ( {data: { confirmed, deaths, recovered }, country }) => {\r\nconst [dailyData, setDailyData] = useState([]);\r\n\r\nuseEffect(() => {\r\n\r\n    const fetchAPI = async () => {\r\n        setDailyData(await fetchDailyData());\r\n    }\r\n\r\n    //console.log(dailyData);\r\n\r\n    fetchAPI();\r\n}, []);\r\n\r\nconst lineChart = (\r\n    dailyData.length  \r\n    ?(\r\n        <Line\r\n        data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({ confirmed }) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n            },{\r\n                data: dailyData.map(({ deaths }) => deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0. 0.5)',\r\n                fill: true,\r\n            }],\r\n        }}\r\n        />): null\r\n);\r\n\r\nconst barChart = (\r\nconfirmed\r\n?(\r\n  <Bar\r\n  data= {{\r\nlabels: ['Infected', 'Recovered', 'Deaths'],\r\ndatasets: [{\r\n    label : 'People',\r\n    backgroundColor: [\r\n        'rgba(0, 0, 255, 0.5)',\r\n        'rgba(0, 255, 0, 0.5)',\r\n        'rgba(255, 0, 255, 0.5)',\r\n    ],\r\n    data:[confirmed.value, recovered.value, deaths.value]\r\n}]\r\n  }}\r\n  options={{\r\n      legend: { display: false },\r\n      title: { display: true, text:`Current state in ${country}`},\r\n  }}\r\n  />  \r\n) : null\r\n);\r\n\r\n\r\n    return(\r\n    <div className={styles.container}>\r\n{country ? barChart: lineChart}\r\n    </div>\r\n        )\r\n}\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\n//import Select from '@material-ui/core/Select';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\nconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\nuseEffect(() => {\r\n    const fetchAPI = async () => {\r\n        setFetchedCountries(await fetchCountries());\r\n    }\r\n\r\n    fetchAPI();\r\n}, [setFetchedCountries]);\r\n\r\n\r\n    return(\r\n    \r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)} className={styles.select}>\r\n                <option value=\"global\">Global</option>\r\n    {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n\r\n    )\r\n}\r\nexport default CountryPicker;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './App.module.css';\r\nimport { Cards, Chart, CountryPicker } from './components';\r\n\r\nimport coronaImage from './images/covid19.png';\r\n\r\nimport { fetchData } from './api';\r\n \r\nclass App extends React.Component {\r\n\r\nstate = {\r\n    data: {},\r\n    country: '',\r\n}\r\n\r\nasync componentDidMount(){\r\n\r\n    const fetchdata = await fetchData();\r\n\r\nthis.setState({data: fetchdata });\r\n}\r\n\r\nhandleCountryChange = async (country) => {\r\n   \r\n    const fetchedData = await fetchData(country);\r\n    // fetch the data\r\n\r\n    // set the state\r\n    //console.log(fetchedData);\r\n    //console.log(country);\r\n    this.setState({data: fetchedData, country: country });\r\n}\r\n\r\n    render(){\r\n        const { data , country} = this.state;\r\n        return(\r\n          \r\n        <div className={styles.container}>\r\n            <img className={styles.image} src={coronaImage} alt='COVID-19' />\r\n            <Cards data={data} />\r\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n            <Chart data={data} country={country} />\r\n            <h3 className=\"bablu\">Developed By: Bablu Agrahari</h3>\r\n        </div>\r\n        \r\n        );\r\n    }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n//import Cards from './components/Cards/Cards';\r\n///import Cards from './components/Chart/Chart';\r\n//import Cards from './components/CountryPicker/CountryPicker';\r\n\r\n\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1gvBr\",\"card\":\"Cards_card__2QwmJ\",\"infected\":\"Cards_infected__CHtGr\",\"recovered\":\"Cards_recovered__eD_Pr\",\"deaths\":\"Cards_deaths__32A0e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__33ciS\",\"image\":\"App_image__2qOEa\",\"bablu\":\"App_bablu__2r-Al\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3iCnf\"};"],"sourceRoot":""}